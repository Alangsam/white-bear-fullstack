{"ast":null,"code":"var _jsxFileName = \"/Users/alex/punchcode/white-bear-fullstack/client/src/components/ui/SignUp.js\";\nimport React from \"react\";\nimport classnames from \"classnames\";\nimport hash from \"object-hash\";\nimport { v4 as getUuid } from \"uuid\";\nimport { EMAIL_REGEX } from \"../../utils/helpers\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport actions from \"../../store/actions\";\nimport { withRouter } from \"react-router-dom\";\n\nclass SignUp extends React.Component {\n  constructor() {\n    super();\n\n    this.makeCreateCardVisible = () => {\n      this.setState({\n        createCardVisible: true\n      });\n    };\n\n    this.state = {\n      createCardVisible: false,\n      createEmailError: \"\",\n      createPasswordError: \"\",\n      creatEmailHasError: false,\n      createPasswordHasError: false\n    };\n  }\n\n  logInCurrentUser() {\n    axios.get(\"https://raw.githubusercontent.com/Alangsam/white-bear-mpa/master/src/mock-data/user.json\").then(res => {\n      // handle success\n      //console.log(res.data);\n      const currentUser = res.data;\n      this.props.dispatch({\n        type: actions.UPDATE_CURRENT_USER,\n        payload: currentUser\n      });\n    }).catch(error => {\n      // handle error\n      console.log(error);\n    });\n  }\n\n  async setEmailState(emailInput) {\n    if (emailInput === \"\") {\n      this.setState({\n        createEmailError: \"Please enter your email\",\n        creatEmailHasError: true\n      });\n    } else if (emailInput !== \"\" && EMAIL_REGEX.test(String(emailInput).toLowerCase()) === false) {\n      this.setState({\n        createEmailError: \"Please enter a valid email\",\n        creatEmailHasError: true\n      });\n    } else this.setState({\n      createEmailError: \"\",\n      creatEmailHasError: false\n    });\n  }\n\n  findNumberOfUniqueCharacters(str) {\n    const arrFromString = str.split(\"\");\n    const arrOfUniqueCharacters = arrFromString.reduce((a, b) => {\n      if (a.indexOf(b) === -1) {\n        a.push(b);\n      }\n\n      return a;\n    }, []);\n    return arrOfUniqueCharacters;\n  }\n\n  async setPasswordState(passwordInput, emailInput) {\n    const indexOfAtSymbol = emailInput.indexOf(\"@\");\n    const localPartEmail = emailInput.slice(0, indexOfAtSymbol);\n    const numOfUniqueCharactersPassword = this.findNumberOfUniqueCharacters(passwordInput);\n\n    if (passwordInput === \"\") {\n      this.setState({\n        createPasswordError: \"Please enter Password\"\n      });\n      this.setState({\n        createPasswordHasError: true\n      });\n    } else if (passwordInput.length < 9) {\n      this.setState({\n        createPasswordError: \"Must have at least 9 characters\"\n      });\n      this.setState({\n        createPasswordHasError: true\n      });\n    } else if (passwordInput.indexOf(localPartEmail) >= 0 && localPartEmail.length > 4) {\n      this.setState({\n        createPasswordError: \"Password cannot contain email\"\n      });\n      this.setState({\n        createPasswordHasError: true\n      });\n    } else if (numOfUniqueCharactersPassword.length < 3) {\n      this.setState({\n        createPasswordError: \"Must have at least 3 unique characters\"\n      });\n      this.setState({\n        createPasswordHasError: true\n      });\n    } else this.setState({\n      createPasswordError: \"\",\n      createPasswordHasError: false\n    });\n  }\n\n  async validateAndCreateUser() {\n    const inputedEmail = document.getElementById(\"Email_textbox\").value;\n    const inputedPassword = document.getElementById(\"Email_password\").value;\n    await this.setEmailState(inputedEmail);\n    await this.setPasswordState(inputedPassword, inputedEmail);\n\n    if (this.state.createPasswordHasError === false && this.state.creatEmailHasError === false) {\n      // eslint-disable-next-line\n      const user = {\n        id: getUuid(),\n        email: inputedEmail,\n        password: hash(inputedPassword),\n        createdAt: Date.now()\n      };\n      this.logInCurrentUser();\n      this.props.history.push(\"/create-answer\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-4   ml-auto pl-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 10\n      }\n    }, !this.state.createCardVisible && /*#__PURE__*/React.createElement(\"div\", {\n      id: \"create\",\n      className: \"card mt-9  mx-auto\",\n      style: {\n        width: \"350px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 22\n      }\n    }, \"Nice to meet you\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 22\n      }\n    }, \"Sign up for White Bear. Free forever.\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        this.makeCreateCardVisible();\n      },\n      id: \"signup\",\n      className: \"btn btn-success btn-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 22\n      }\n    }, \"signup\"))), this.state.createCardVisible && /*#__PURE__*/React.createElement(\"div\", {\n      id: \"creating-acc\",\n      className: \"card mt-9  mx-auto\",\n      style: {\n        width: \"350px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 22\n      }\n    }, \"Nice to meet you\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 22\n      }\n    }, \"Sign up for White Bear. Free forever.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 22\n      }\n    }, \"Let's get you signed up\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Email_textbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 28\n      }\n    }, \"Email address\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"Email_textbox\",\n      className: classnames({\n        \"form-control\": true,\n        \"is-invalid\": this.state.creatEmailHasError\n      }),\n      type: \"email\",\n      name: \"login_info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 28\n      }\n    }), this.state.creatEmailHasError && /*#__PURE__*/React.createElement(\"div\", {\n      htmlFor: \"Email_textbox\",\n      id: \"you-have-to-create-email\",\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 31\n      }\n    }, this.state.createEmailError)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Email_password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 28\n      }\n    }, \"Create a password\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"Email_password\",\n      className: classnames({\n        \"form-control\": true,\n        \"is-invalid\": this.state.createPasswordHasError\n      }),\n      type: \"password\",\n      name: \"login_info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 28\n      }\n    }), this.state.createPasswordHasError && /*#__PURE__*/React.createElement(\"div\", {\n      htmlFor: \"Email_password\",\n      id: \"you-have-to-enter-something-password\",\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 31\n      }\n    }, this.state.createPasswordError))), /*#__PURE__*/React.createElement(\"button\", {\n      to: \"/create-answer\",\n      className: \"btn btn-success btn-block mt-4\",\n      onClick: () => {\n        this.validateAndCreateUser();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 22\n      }\n    }, \"Let's go!\"))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nexport default withRouter(connect(mapStateToProps)(SignUp));","map":{"version":3,"sources":["/Users/alex/punchcode/white-bear-fullstack/client/src/components/ui/SignUp.js"],"names":["React","classnames","hash","v4","getUuid","EMAIL_REGEX","axios","connect","actions","withRouter","SignUp","Component","constructor","makeCreateCardVisible","setState","createCardVisible","state","createEmailError","createPasswordError","creatEmailHasError","createPasswordHasError","logInCurrentUser","get","then","res","currentUser","data","props","dispatch","type","UPDATE_CURRENT_USER","payload","catch","error","console","log","setEmailState","emailInput","test","String","toLowerCase","findNumberOfUniqueCharacters","str","arrFromString","split","arrOfUniqueCharacters","reduce","a","b","indexOf","push","setPasswordState","passwordInput","indexOfAtSymbol","localPartEmail","slice","numOfUniqueCharactersPassword","length","validateAndCreateUser","inputedEmail","document","getElementById","value","inputedPassword","user","id","email","password","createdAt","Date","now","history","render","width","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classnames from \"classnames\";\nimport hash from \"object-hash\";\nimport { v4 as getUuid } from \"uuid\";\nimport { EMAIL_REGEX } from \"../../utils/helpers\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport actions from \"../../store/actions\";\nimport { withRouter } from \"react-router-dom\";\n\nclass SignUp extends React.Component {\n   constructor() {\n      super();\n      this.state = {\n         createCardVisible: false,\n         createEmailError: \"\",\n         createPasswordError: \"\",\n         creatEmailHasError: false,\n         createPasswordHasError: false,\n      };\n   }\n\n   logInCurrentUser() {\n      axios\n         .get(\n            \"https://raw.githubusercontent.com/Alangsam/white-bear-mpa/master/src/mock-data/user.json\"\n         )\n         .then((res) => {\n            // handle success\n            //console.log(res.data);\n            const currentUser = res.data;\n            this.props.dispatch({\n               type: actions.UPDATE_CURRENT_USER,\n               payload: currentUser,\n            });\n         })\n         .catch((error) => {\n            // handle error\n            console.log(error);\n         });\n   }\n\n   makeCreateCardVisible = () => {\n      this.setState({ createCardVisible: true });\n   };\n\n   async setEmailState(emailInput) {\n      if (emailInput === \"\") {\n         this.setState({\n            createEmailError: \"Please enter your email\",\n            creatEmailHasError: true,\n         });\n      } else if (\n         emailInput !== \"\" &&\n         EMAIL_REGEX.test(String(emailInput).toLowerCase()) === false\n      ) {\n         this.setState({\n            createEmailError: \"Please enter a valid email\",\n            creatEmailHasError: true,\n         });\n      } else this.setState({ createEmailError: \"\", creatEmailHasError: false });\n   }\n\n   findNumberOfUniqueCharacters(str) {\n      const arrFromString = str.split(\"\");\n      const arrOfUniqueCharacters = arrFromString.reduce((a, b) => {\n         if (a.indexOf(b) === -1) {\n            a.push(b);\n         }\n         return a;\n      }, []);\n\n      return arrOfUniqueCharacters;\n   }\n\n   async setPasswordState(passwordInput, emailInput) {\n      const indexOfAtSymbol = emailInput.indexOf(\"@\");\n      const localPartEmail = emailInput.slice(0, indexOfAtSymbol);\n      const numOfUniqueCharactersPassword = this.findNumberOfUniqueCharacters(\n         passwordInput\n      );\n      if (passwordInput === \"\") {\n         this.setState({ createPasswordError: \"Please enter Password\" });\n         this.setState({ createPasswordHasError: true });\n      } else if (passwordInput.length < 9) {\n         this.setState({\n            createPasswordError: \"Must have at least 9 characters\",\n         });\n         this.setState({ createPasswordHasError: true });\n      } else if (\n         passwordInput.indexOf(localPartEmail) >= 0 &&\n         localPartEmail.length > 4\n      ) {\n         this.setState({\n            createPasswordError: \"Password cannot contain email\",\n         });\n         this.setState({ createPasswordHasError: true });\n      } else if (numOfUniqueCharactersPassword.length < 3) {\n         this.setState({\n            createPasswordError: \"Must have at least 3 unique characters\",\n         });\n         this.setState({ createPasswordHasError: true });\n      } else\n         this.setState({\n            createPasswordError: \"\",\n            createPasswordHasError: false,\n         });\n   }\n\n   async validateAndCreateUser() {\n      const inputedEmail = document.getElementById(\"Email_textbox\").value;\n      const inputedPassword = document.getElementById(\"Email_password\").value;\n      await this.setEmailState(inputedEmail);\n      await this.setPasswordState(inputedPassword, inputedEmail);\n      if (\n         this.state.createPasswordHasError === false &&\n         this.state.creatEmailHasError === false\n      ) {\n         // eslint-disable-next-line\n         const user = {\n            id: getUuid(),\n            email: inputedEmail,\n            password: hash(inputedPassword),\n            createdAt: Date.now(),\n         };\n         this.logInCurrentUser();\n         this.props.history.push(\"/create-answer\");\n      }\n   }\n\n   render() {\n      return (\n         <div className=\"col-lg-4   ml-auto pl-1\">\n            {!this.state.createCardVisible && (\n               <div\n                  id=\"create\"\n                  className=\"card mt-9  mx-auto\"\n                  style={{ width: \"350px\" }}\n               >\n                  <div className=\"card-body\">\n                     <h2 className=\"card-title\">Nice to meet you</h2>\n                     <p className=\"card-text\">\n                        Sign up for White Bear. Free forever.\n                     </p>\n                     <button\n                        onClick={() => {\n                           this.makeCreateCardVisible();\n                        }}\n                        id=\"signup\"\n                        className=\"btn btn-success btn-block\"\n                     >\n                        signup\n                     </button>\n                  </div>\n               </div>\n            )}\n\n            {/* if true render this stuff */}\n            {this.state.createCardVisible && (\n               <div\n                  id=\"creating-acc\"\n                  className=\"card mt-9  mx-auto\"\n                  style={{ width: \"350px\" }}\n               >\n                  <div className=\"card-body\">\n                     <h2 className=\"card-title\">Nice to meet you</h2>\n                     <p className=\"card-text\">\n                        Sign up for White Bear. Free forever.\n                     </p>\n                     <p>Let's get you signed up</p>\n                     <form>\n                        <div className=\"form-group\">\n                           <label htmlFor=\"Email_textbox\">Email address</label>\n                           <input\n                              id=\"Email_textbox\"\n                              className={classnames({\n                                 \"form-control\": true,\n                                 \"is-invalid\": this.state.creatEmailHasError,\n                              })}\n                              type=\"email\"\n                              name=\"login_info\"\n                           ></input>\n                           {this.state.creatEmailHasError && (\n                              <div\n                                 htmlFor=\"Email_textbox\"\n                                 id=\"you-have-to-create-email\"\n                                 className=\"text-danger\"\n                              >\n                                 {this.state.createEmailError}\n                              </div>\n                           )}\n                        </div>\n                        <div className=\"form-group\">\n                           <label htmlFor=\"Email_password\">\n                              Create a password\n                           </label>\n\n                           <input\n                              id=\"Email_password\"\n                              className={classnames({\n                                 \"form-control\": true,\n                                 \"is-invalid\": this.state\n                                    .createPasswordHasError,\n                              })}\n                              type=\"password\"\n                              name=\"login_info\"\n                           ></input>\n                           {this.state.createPasswordHasError && (\n                              <div\n                                 htmlFor=\"Email_password\"\n                                 id=\"you-have-to-enter-something-password\"\n                                 className=\"text-danger\"\n                              >\n                                 {this.state.createPasswordError}\n                              </div>\n                           )}\n                        </div>\n                     </form>\n                     <button\n                        to=\"/create-answer\"\n                        className=\"btn btn-success btn-block mt-4\"\n                        onClick={() => {\n                           this.validateAndCreateUser();\n                        }}\n                     >\n                        Let's go!\n                     </button>\n                  </div>\n               </div>\n            )}\n         </div>\n      );\n   }\n}\n\nfunction mapStateToProps(state) {\n   return {};\n}\n\nexport default withRouter(connect(mapStateToProps)(SignUp));\n"]},"metadata":{},"sourceType":"module"}