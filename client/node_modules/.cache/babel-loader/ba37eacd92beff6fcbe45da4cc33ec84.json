{"ast":null,"code":"var _jsxFileName = \"/Users/alex/punchcode/white-bear-fullstack/client/src/components/ui/Login.js\";\nimport React from \"react\";\nimport classnames from \"classnames\";\nimport hash from \"object-hash\";\nimport { v4 as getUuid } from \"uuid\";\nimport { EMAIL_REGEX } from \"../../utils/helpers\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport actions from \"../../store/actions\";\nimport { withRouter } from \"react-router-dom\";\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      emailErrorMessage: \"\",\n      emailIsntValid: \"\",\n      PasswordFieldIsBlank: false\n    };\n  }\n\n  logInCurrentUser() {\n    axios.get(\"https://raw.githubusercontent.com/Alangsam/white-bear-mpa/master/src/mock-data/user.json\").then(res => {\n      // handle success\n      console.log(res.data);\n      const currentUser = res.data;\n      this.props.dispatch({\n        type: actions.UPDATE_CURRENT_USER,\n        payload: currentUser\n      });\n    }).catch(error => {\n      // handle error\n      console.log(error);\n    });\n  }\n\n  checkIfCredentialsEntered() {\n    const inputedEmail = document.getElementById(\"Email_textbox_bottom\").value;\n    const inputedPassword = document.getElementById(\"Email_password_bottom\").value;\n\n    if (inputedEmail === \"\") {\n      this.setState({\n        emailIsntValid: true,\n        emailErrorMessage: \"Please enter your email\"\n      });\n    } else if (EMAIL_REGEX.test(String(inputedEmail).toLowerCase()) === false) {\n      this.setState({\n        emailIsntValid: true,\n        emailErrorMessage: \"Please enter a valid email\"\n      });\n    } else {\n      this.setState({\n        emailIsntValid: false,\n        emailErrorMessage: \"\"\n      });\n    }\n\n    if (inputedPassword === \"\") {\n      this.setState({\n        PasswordFieldIsBlank: true\n      });\n    } else {\n      this.setState({\n        PasswordFieldIsBlank: false\n      });\n    }\n  }\n\n  logUserObject() {\n    const inputedEmail = document.getElementById(\"Email_textbox_bottom\").value;\n    const inputedPassword = document.getElementById(\"Email_password_bottom\").value;\n\n    if (this.state.emailIsntValid === false && this.state.PasswordFieldIsBlank === false) {\n      const user = {\n        id: getUuid(),\n        email: inputedEmail,\n        password: hash(inputedPassword),\n        createdAt: Date.now()\n      };\n      console.log(user);\n      this.logInCurrentUser();\n      this.props.history.push(\"/create-answer\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-4 ml-lg-8 mr-auto pl-1 mb-9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card mt-9  mx-auto\",\n      style: {\n        width: \"350px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 19\n      }\n    }, \"Welcome back\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 19\n      }\n    }, \"Log in with your email address and password.\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Email_textbox_bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }, \"Email address\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"Email_textbox_bottom\",\n      className: classnames({\n        \"form-control\": true,\n        \"is-invalid\": this.state.emailIsntValid\n      }),\n      type: \"email\",\n      name: \"login_info\",\n      onChange: () => {\n        this.checkIfCredentialsEntered();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }), this.state.emailIsntValid && /*#__PURE__*/React.createElement(\"div\", {\n      htmlFor: \"Email_textbox_bottom\",\n      id: \"you-need-to-enter-email\",\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 28\n      }\n    }, this.state.emailErrorMessage)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Email_password_bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"Email_password_bottom\",\n      className: classnames({\n        \"form-control\": true,\n        \"is-invalid\": this.state.PasswordFieldIsBlank\n      }),\n      type: \"password\",\n      name: \"login_info\",\n      onChange: () => {\n        this.checkIfCredentialsEntered();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }), this.state.PasswordFieldIsBlank && /*#__PURE__*/React.createElement(\"div\", {\n      htmlFor: \"Email_password_bottom\",\n      id: \"you-need-to-enter-something\",\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 28\n      }\n    }, \"Please enter your password.\"))), /*#__PURE__*/React.createElement(\"button\", {\n      to: \"/create-answer\",\n      className: \"btn btn-success float-right mt-4\",\n      onClick: () => {\n        this.checkIfCredentialsEntered();\n        this.logUserObject();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 19\n      }\n    }, \"Log in\"))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    editableCard: state.editableCard,\n    queue: state.queue,\n    currentUser: state.currentUser\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(Login));","map":{"version":3,"sources":["/Users/alex/punchcode/white-bear-fullstack/client/src/components/ui/Login.js"],"names":["React","classnames","hash","v4","getUuid","EMAIL_REGEX","axios","connect","actions","withRouter","Login","Component","constructor","state","emailErrorMessage","emailIsntValid","PasswordFieldIsBlank","logInCurrentUser","get","then","res","console","log","data","currentUser","props","dispatch","type","UPDATE_CURRENT_USER","payload","catch","error","checkIfCredentialsEntered","inputedEmail","document","getElementById","value","inputedPassword","setState","test","String","toLowerCase","logUserObject","user","id","email","password","createdAt","Date","now","history","push","render","width","mapStateToProps","editableCard","queue"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,EAAE,IAAIC,OAAf,QAA8B,MAA9B;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,KAAN,SAAoBV,KAAK,CAACW,SAA1B,CAAoC;AACjCC,EAAAA,WAAW,GAAG;AACX;AACA,SAAKC,KAAL,GAAa;AACVC,MAAAA,iBAAiB,EAAE,EADT;AAEVC,MAAAA,cAAc,EAAE,EAFN;AAGVC,MAAAA,oBAAoB,EAAE;AAHZ,KAAb;AAKF;;AAEDC,EAAAA,gBAAgB,GAAG;AAChBX,IAAAA,KAAK,CACDY,GADJ,CAEM,0FAFN,EAIIC,IAJJ,CAIUC,GAAD,IAAS;AACZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACA,YAAMC,WAAW,GAAGJ,GAAG,CAACG,IAAxB;AACA,WAAKE,KAAL,CAAWC,QAAX,CAAoB;AACjBC,QAAAA,IAAI,EAAEnB,OAAO,CAACoB,mBADG;AAEjBC,QAAAA,OAAO,EAAEL;AAFQ,OAApB;AAIF,KAZJ,EAaIM,KAbJ,CAaWC,KAAD,IAAW;AACf;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ;AACF,KAhBJ;AAiBF;;AAEDC,EAAAA,yBAAyB,GAAG;AACzB,UAAMC,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwB,sBAAxB,EACjBC,KADJ;AAEA,UAAMC,eAAe,GAAGH,QAAQ,CAACC,cAAT,CAAwB,uBAAxB,EACpBC,KADJ;;AAEA,QAAIH,YAAY,KAAK,EAArB,EAAyB;AACtB,WAAKK,QAAL,CAAc;AACXvB,QAAAA,cAAc,EAAE,IADL;AAEXD,QAAAA,iBAAiB,EAAE;AAFR,OAAd;AAIF,KALD,MAKO,IACJT,WAAW,CAACkC,IAAZ,CAAiBC,MAAM,CAACP,YAAD,CAAN,CAAqBQ,WAArB,EAAjB,MAAyD,KADrD,EAEL;AACC,WAAKH,QAAL,CAAc;AACXvB,QAAAA,cAAc,EAAE,IADL;AAEXD,QAAAA,iBAAiB,EAAE;AAFR,OAAd;AAIF,KAPM,MAOA;AACJ,WAAKwB,QAAL,CAAc;AAAEvB,QAAAA,cAAc,EAAE,KAAlB;AAAyBD,QAAAA,iBAAiB,EAAE;AAA5C,OAAd;AACF;;AACD,QAAIuB,eAAe,KAAK,EAAxB,EAA4B;AACzB,WAAKC,QAAL,CAAc;AAAEtB,QAAAA,oBAAoB,EAAE;AAAxB,OAAd;AACF,KAFD,MAEO;AACJ,WAAKsB,QAAL,CAAc;AAAEtB,QAAAA,oBAAoB,EAAE;AAAxB,OAAd;AACF;AACH;;AAED0B,EAAAA,aAAa,GAAG;AACb,UAAMT,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwB,sBAAxB,EACjBC,KADJ;AAEA,UAAMC,eAAe,GAAGH,QAAQ,CAACC,cAAT,CAAwB,uBAAxB,EACpBC,KADJ;;AAEA,QACG,KAAKvB,KAAL,CAAWE,cAAX,KAA8B,KAA9B,IACA,KAAKF,KAAL,CAAWG,oBAAX,KAAoC,KAFvC,EAGE;AACC,YAAM2B,IAAI,GAAG;AACVC,QAAAA,EAAE,EAAExC,OAAO,EADD;AAEVyC,QAAAA,KAAK,EAAEZ,YAFG;AAGVa,QAAAA,QAAQ,EAAE5C,IAAI,CAACmC,eAAD,CAHJ;AAIVU,QAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL;AAJD,OAAb;AAMA5B,MAAAA,OAAO,CAACC,GAAR,CAAYqB,IAAZ;AACA,WAAK1B,gBAAL;AACA,WAAKQ,KAAL,CAAWyB,OAAX,CAAmBC,IAAnB,CAAwB,gBAAxB;AACF;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACN,wBACG;AAAK,MAAA,SAAS,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAoC,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADH,eAEG;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAFH,eAKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AAAO,MAAA,OAAO,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADH,eAIG;AACG,MAAA,EAAE,EAAC,sBADN;AAEG,MAAA,SAAS,EAAEpD,UAAU,CAAC;AACnB,wBAAgB,IADG;AAEnB,sBAAc,KAAKY,KAAL,CAAWE;AAFN,OAAD,CAFxB;AAMG,MAAA,IAAI,EAAC,OANR;AAOG,MAAA,IAAI,EAAC,YAPR;AAQG,MAAA,QAAQ,EAAE,MAAM;AACb,aAAKiB,yBAAL;AACF,OAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJH,EAgBI,KAAKnB,KAAL,CAAWE,cAAX,iBACE;AACG,MAAA,OAAO,EAAC,sBADX;AAEG,MAAA,EAAE,EAAC,yBAFN;AAGG,MAAA,SAAS,EAAC,aAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKI,KAAKF,KAAL,CAAWC,iBALf,CAjBN,CADH,eA2BG;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AAAO,MAAA,OAAO,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH,eAEG;AACG,MAAA,EAAE,EAAC,uBADN;AAEG,MAAA,SAAS,EAAEb,UAAU,CAAC;AACnB,wBAAgB,IADG;AAEnB,sBAAc,KAAKY,KAAL,CAAWG;AAFN,OAAD,CAFxB;AAMG,MAAA,IAAI,EAAC,UANR;AAOG,MAAA,IAAI,EAAC,YAPR;AAQG,MAAA,QAAQ,EAAE,MAAM;AACb,aAAKgB,yBAAL;AACF,OAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,EAcI,KAAKnB,KAAL,CAAWG,oBAAX,iBACE;AACG,MAAA,OAAO,EAAC,uBADX;AAEG,MAAA,EAAE,EAAC,6BAFN;AAGG,MAAA,SAAS,EAAC,aAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAfN,CA3BH,CALH,eAyDG;AACG,MAAA,EAAE,EAAC,gBADN;AAEG,MAAA,SAAS,EAAC,kCAFb;AAGG,MAAA,OAAO,EAAE,MAAM;AACZ,aAAKgB,yBAAL;AACA,aAAKU,aAAL;AACF,OANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzDH,CADH,CADH,CADH;AA0EF;;AAzJgC;;AA4JpC,SAASY,eAAT,CAAyBzC,KAAzB,EAAgC;AAC7B,SAAO;AACJ0C,IAAAA,YAAY,EAAE1C,KAAK,CAAC0C,YADhB;AAEJC,IAAAA,KAAK,EAAE3C,KAAK,CAAC2C,KAFT;AAGJhC,IAAAA,WAAW,EAAEX,KAAK,CAACW;AAHf,GAAP;AAKF;;AAED,eAAef,UAAU,CAACF,OAAO,CAAC+C,eAAD,CAAP,CAAyB5C,KAAzB,CAAD,CAAzB","sourcesContent":["import React from \"react\";\nimport classnames from \"classnames\";\nimport hash from \"object-hash\";\nimport { v4 as getUuid } from \"uuid\";\nimport { EMAIL_REGEX } from \"../../utils/helpers\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport actions from \"../../store/actions\";\nimport { withRouter } from \"react-router-dom\";\n\nclass Login extends React.Component {\n   constructor() {\n      super();\n      this.state = {\n         emailErrorMessage: \"\",\n         emailIsntValid: \"\",\n         PasswordFieldIsBlank: false,\n      };\n   }\n\n   logInCurrentUser() {\n      axios\n         .get(\n            \"https://raw.githubusercontent.com/Alangsam/white-bear-mpa/master/src/mock-data/user.json\"\n         )\n         .then((res) => {\n            // handle success\n            console.log(res.data);\n            const currentUser = res.data;\n            this.props.dispatch({\n               type: actions.UPDATE_CURRENT_USER,\n               payload: currentUser,\n            });\n         })\n         .catch((error) => {\n            // handle error\n            console.log(error);\n         });\n   }\n\n   checkIfCredentialsEntered() {\n      const inputedEmail = document.getElementById(\"Email_textbox_bottom\")\n         .value;\n      const inputedPassword = document.getElementById(\"Email_password_bottom\")\n         .value;\n      if (inputedEmail === \"\") {\n         this.setState({\n            emailIsntValid: true,\n            emailErrorMessage: \"Please enter your email\",\n         });\n      } else if (\n         EMAIL_REGEX.test(String(inputedEmail).toLowerCase()) === false\n      ) {\n         this.setState({\n            emailIsntValid: true,\n            emailErrorMessage: \"Please enter a valid email\",\n         });\n      } else {\n         this.setState({ emailIsntValid: false, emailErrorMessage: \"\" });\n      }\n      if (inputedPassword === \"\") {\n         this.setState({ PasswordFieldIsBlank: true });\n      } else {\n         this.setState({ PasswordFieldIsBlank: false });\n      }\n   }\n\n   logUserObject() {\n      const inputedEmail = document.getElementById(\"Email_textbox_bottom\")\n         .value;\n      const inputedPassword = document.getElementById(\"Email_password_bottom\")\n         .value;\n      if (\n         this.state.emailIsntValid === false &&\n         this.state.PasswordFieldIsBlank === false\n      ) {\n         const user = {\n            id: getUuid(),\n            email: inputedEmail,\n            password: hash(inputedPassword),\n            createdAt: Date.now(),\n         };\n         console.log(user);\n         this.logInCurrentUser();\n         this.props.history.push(\"/create-answer\");\n      }\n   }\n\n   render() {\n      return (\n         <div className=\"col-lg-4 ml-lg-8 mr-auto pl-1 mb-9\">\n            <div className=\"card mt-9  mx-auto\" style={{ width: \"350px\" }}>\n               <div className=\"card-body\">\n                  <h2 className=\"card-title\">Welcome back</h2>\n                  <p className=\"card-text\">\n                     Log in with your email address and password.\n                  </p>\n                  <form>\n                     <div className=\"form-group\">\n                        <label htmlFor=\"Email_textbox_bottom\">\n                           Email address\n                        </label>\n                        <input\n                           id=\"Email_textbox_bottom\"\n                           className={classnames({\n                              \"form-control\": true,\n                              \"is-invalid\": this.state.emailIsntValid,\n                           })}\n                           type=\"email\"\n                           name=\"login_info\"\n                           onChange={() => {\n                              this.checkIfCredentialsEntered();\n                           }}\n                        ></input>\n                        {this.state.emailIsntValid && (\n                           <div\n                              htmlFor=\"Email_textbox_bottom\"\n                              id=\"you-need-to-enter-email\"\n                              className=\"text-danger\"\n                           >\n                              {this.state.emailErrorMessage}\n                           </div>\n                        )}\n                     </div>\n                     <div className=\"form-group\">\n                        <label htmlFor=\"Email_password_bottom\">Password</label>\n                        <input\n                           id=\"Email_password_bottom\"\n                           className={classnames({\n                              \"form-control\": true,\n                              \"is-invalid\": this.state.PasswordFieldIsBlank,\n                           })}\n                           type=\"password\"\n                           name=\"login_info\"\n                           onChange={() => {\n                              this.checkIfCredentialsEntered();\n                           }}\n                        ></input>\n                        {this.state.PasswordFieldIsBlank && (\n                           <div\n                              htmlFor=\"Email_password_bottom\"\n                              id=\"you-need-to-enter-something\"\n                              className=\"text-danger\"\n                           >\n                              Please enter your password.\n                           </div>\n                        )}\n                     </div>\n                  </form>\n                  <button\n                     to=\"/create-answer\"\n                     className=\"btn btn-success float-right mt-4\"\n                     onClick={() => {\n                        this.checkIfCredentialsEntered();\n                        this.logUserObject();\n                     }}\n                  >\n                     Log in\n                  </button>\n               </div>\n            </div>\n         </div>\n      );\n   }\n}\n\nfunction mapStateToProps(state) {\n   return {\n      editableCard: state.editableCard,\n      queue: state.queue,\n      currentUser: state.currentUser,\n   };\n}\n\nexport default withRouter(connect(mapStateToProps)(Login));\n"]},"metadata":{},"sourceType":"module"}