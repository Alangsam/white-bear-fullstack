{"ast":null,"code":"import _classCallCheck from\"/Users/alex/punchcode/white-bear-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/alex/punchcode/white-bear-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/alex/punchcode/white-bear-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/alex/punchcode/white-bear-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import classnames from\"classnames\";import hash from\"object-hash\";import{v4 as getUuid}from\"uuid\";import{EMAIL_REGEX}from\"../../utils/helpers\";import axios from\"axios\";import{connect}from\"react-redux\";import actions from\"../../store/actions\";import{withRouter}from\"react-router-dom\";var Login=/*#__PURE__*/function(_React$Component){_inherits(Login,_React$Component);var _super=_createSuper(Login);function Login(){var _this;_classCallCheck(this,Login);_this=_super.call(this);_this.state={emailErrorMessage:\"\",emailIsntValid:\"\",PasswordFieldIsBlank:false};return _this;}_createClass(Login,[{key:\"logInCurrentUser\",value:function logInCurrentUser(){var _this2=this;axios.get(\"https://raw.githubusercontent.com/Alangsam/white-bear-mpa/master/src/mock-data/user.json\").then(function(res){// handle success\nconsole.log(res.data);var currentUser=res.data;_this2.props.dispatch({type:actions.UPDATE_CURRENT_USER,payload:currentUser});}).catch(function(error){// handle error\nconsole.log(error);});}},{key:\"checkIfCredentialsEntered\",value:function checkIfCredentialsEntered(){var inputedEmail=document.getElementById(\"Email_textbox_bottom\").value;var inputedPassword=document.getElementById(\"Email_password_bottom\").value;if(inputedEmail===\"\"){this.setState({emailIsntValid:true,emailErrorMessage:\"Please enter your email\"});}else if(EMAIL_REGEX.test(String(inputedEmail).toLowerCase())===false){this.setState({emailIsntValid:true,emailErrorMessage:\"Please enter a valid email\"});}else{this.setState({emailIsntValid:false,emailErrorMessage:\"\"});}if(inputedPassword===\"\"){this.setState({PasswordFieldIsBlank:true});}else{this.setState({PasswordFieldIsBlank:false});}}},{key:\"logUserObject\",value:function logUserObject(){var inputedEmail=document.getElementById(\"Email_textbox_bottom\").value;var inputedPassword=document.getElementById(\"Email_password_bottom\").value;if(this.state.emailIsntValid===false&&this.state.PasswordFieldIsBlank===false){var user={id:getUuid(),email:inputedEmail,password:hash(inputedPassword),createdAt:Date.now()};console.log(user);this.logInCurrentUser();this.props.history.push(\"/create-answer\");}}},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/React.createElement(\"div\",{className:\"col-lg-4 ml-lg-8 mr-auto pl-1 mb-9\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card mt-9  mx-auto\",style:{width:\"350px\"}},/*#__PURE__*/React.createElement(\"div\",{className:\"card-body\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"card-title\"},\"Welcome back\"),/*#__PURE__*/React.createElement(\"p\",{className:\"card-text\"},\"Log in with your email address and password.\"),/*#__PURE__*/React.createElement(\"form\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"Email_textbox_bottom\"},\"Email address\"),/*#__PURE__*/React.createElement(\"input\",{id:\"Email_textbox_bottom\",className:classnames({\"form-control\":true,\"is-invalid\":this.state.emailIsntValid}),type:\"email\",name:\"login_info\",onChange:function onChange(){_this3.checkIfCredentialsEntered();}}),this.state.emailIsntValid&&/*#__PURE__*/React.createElement(\"div\",{htmlFor:\"Email_textbox_bottom\",id:\"you-need-to-enter-email\",className:\"text-danger\"},this.state.emailErrorMessage)),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"Email_password_bottom\"},\"Password\"),/*#__PURE__*/React.createElement(\"input\",{id:\"Email_password_bottom\",className:classnames({\"form-control\":true,\"is-invalid\":this.state.PasswordFieldIsBlank}),type:\"password\",name:\"login_info\",onChange:function onChange(){_this3.checkIfCredentialsEntered();}}),this.state.PasswordFieldIsBlank&&/*#__PURE__*/React.createElement(\"div\",{htmlFor:\"Email_password_bottom\",id:\"you-need-to-enter-something\",className:\"text-danger\"},\"Please enter your password.\"))),/*#__PURE__*/React.createElement(\"button\",{to:\"/create-answer\",className:\"btn btn-success float-right mt-4\",onClick:function onClick(){_this3.checkIfCredentialsEntered();_this3.logUserObject();}},\"Log in\"))));}}]);return Login;}(React.Component);function mapStateToProps(state){return{editableCard:state.editableCard,queue:state.queue,currentUser:state.currentUser};}export default withRouter(connect(mapStateToProps)(Login));","map":{"version":3,"sources":["/Users/alex/punchcode/white-bear-fullstack/client/src/components/ui/Login.js"],"names":["React","classnames","hash","v4","getUuid","EMAIL_REGEX","axios","connect","actions","withRouter","Login","state","emailErrorMessage","emailIsntValid","PasswordFieldIsBlank","get","then","res","console","log","data","currentUser","props","dispatch","type","UPDATE_CURRENT_USER","payload","catch","error","inputedEmail","document","getElementById","value","inputedPassword","setState","test","String","toLowerCase","user","id","email","password","createdAt","Date","now","logInCurrentUser","history","push","width","checkIfCredentialsEntered","logUserObject","Component","mapStateToProps","editableCard","queue"],"mappings":"gpBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,MAAOC,CAAAA,IAAP,KAAiB,aAAjB,CACA,OAASC,EAAE,GAAIC,CAAAA,OAAf,KAA8B,MAA9B,CACA,OAASC,WAAT,KAA4B,qBAA5B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,qBAApB,CACA,OAASC,UAAT,KAA2B,kBAA3B,C,GAEMC,CAAAA,K,0GACH,gBAAc,uCACX,wBACA,MAAKC,KAAL,CAAa,CACVC,iBAAiB,CAAE,EADT,CAEVC,cAAc,CAAE,EAFN,CAGVC,oBAAoB,CAAE,KAHZ,CAAb,CAFW,aAOb,C,6EAEkB,iBAChBR,KAAK,CACDS,GADJ,CAEM,0FAFN,EAIIC,IAJJ,CAIS,SAACC,GAAD,CAAS,CACZ;AACAC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB,EACA,GAAMC,CAAAA,WAAW,CAAGJ,GAAG,CAACG,IAAxB,CACA,MAAI,CAACE,KAAL,CAAWC,QAAX,CAAoB,CACjBC,IAAI,CAAEhB,OAAO,CAACiB,mBADG,CAEjBC,OAAO,CAAEL,WAFQ,CAApB,EAIF,CAZJ,EAaIM,KAbJ,CAaU,SAACC,KAAD,CAAW,CACf;AACAV,OAAO,CAACC,GAAR,CAAYS,KAAZ,EACF,CAhBJ,EAiBF,C,6EAE2B,CACzB,GAAMC,CAAAA,YAAY,CAAGC,QAAQ,CAACC,cAAT,CAAwB,sBAAxB,EACjBC,KADJ,CAEA,GAAMC,CAAAA,eAAe,CAAGH,QAAQ,CAACC,cAAT,CAAwB,uBAAxB,EACpBC,KADJ,CAEA,GAAIH,YAAY,GAAK,EAArB,CAAyB,CACtB,KAAKK,QAAL,CAAc,CACXrB,cAAc,CAAE,IADL,CAEXD,iBAAiB,CAAE,yBAFR,CAAd,EAIF,CALD,IAKO,IACJP,WAAW,CAAC8B,IAAZ,CAAiBC,MAAM,CAACP,YAAD,CAAN,CAAqBQ,WAArB,EAAjB,IAAyD,KADrD,CAEL,CACC,KAAKH,QAAL,CAAc,CACXrB,cAAc,CAAE,IADL,CAEXD,iBAAiB,CAAE,4BAFR,CAAd,EAIF,CAPM,IAOA,CACJ,KAAKsB,QAAL,CAAc,CAAErB,cAAc,CAAE,KAAlB,CAAyBD,iBAAiB,CAAE,EAA5C,CAAd,EACF,CACD,GAAIqB,eAAe,GAAK,EAAxB,CAA4B,CACzB,KAAKC,QAAL,CAAc,CAAEpB,oBAAoB,CAAE,IAAxB,CAAd,EACF,CAFD,IAEO,CACJ,KAAKoB,QAAL,CAAc,CAAEpB,oBAAoB,CAAE,KAAxB,CAAd,EACF,CACH,C,qDAEe,CACb,GAAMe,CAAAA,YAAY,CAAGC,QAAQ,CAACC,cAAT,CAAwB,sBAAxB,EACjBC,KADJ,CAEA,GAAMC,CAAAA,eAAe,CAAGH,QAAQ,CAACC,cAAT,CAAwB,uBAAxB,EACpBC,KADJ,CAEA,GACG,KAAKrB,KAAL,CAAWE,cAAX,GAA8B,KAA9B,EACA,KAAKF,KAAL,CAAWG,oBAAX,GAAoC,KAFvC,CAGE,CACC,GAAMwB,CAAAA,IAAI,CAAG,CACVC,EAAE,CAAEnC,OAAO,EADD,CAEVoC,KAAK,CAAEX,YAFG,CAGVY,QAAQ,CAAEvC,IAAI,CAAC+B,eAAD,CAHJ,CAIVS,SAAS,CAAEC,IAAI,CAACC,GAAL,EAJD,CAAb,CAMA1B,OAAO,CAACC,GAAR,CAAYmB,IAAZ,EACA,KAAKO,gBAAL,GACA,KAAKvB,KAAL,CAAWwB,OAAX,CAAmBC,IAAnB,CAAwB,gBAAxB,EACF,CACH,C,uCAEQ,iBACN,mBACG,2BAAK,SAAS,CAAC,oCAAf,eACG,2BAAK,SAAS,CAAC,oBAAf,CAAoC,KAAK,CAAE,CAAEC,KAAK,CAAE,OAAT,CAA3C,eACG,2BAAK,SAAS,CAAC,WAAf,eACG,0BAAI,SAAS,CAAC,YAAd,iBADH,cAEG,yBAAG,SAAS,CAAC,WAAb,iDAFH,cAKG,6CACG,2BAAK,SAAS,CAAC,YAAf,eACG,6BAAO,OAAO,CAAC,sBAAf,kBADH,cAIG,6BACG,EAAE,CAAC,sBADN,CAEG,SAAS,CAAE/C,UAAU,CAAC,CACnB,eAAgB,IADG,CAEnB,aAAc,KAAKU,KAAL,CAAWE,cAFN,CAAD,CAFxB,CAMG,IAAI,CAAC,OANR,CAOG,IAAI,CAAC,YAPR,CAQG,QAAQ,CAAE,mBAAM,CACb,MAAI,CAACoC,yBAAL,GACF,CAVJ,EAJH,CAgBI,KAAKtC,KAAL,CAAWE,cAAX,eACE,2BACG,OAAO,CAAC,sBADX,CAEG,EAAE,CAAC,yBAFN,CAGG,SAAS,CAAC,aAHb,EAKI,KAAKF,KAAL,CAAWC,iBALf,CAjBN,CADH,cA2BG,2BAAK,SAAS,CAAC,YAAf,eACG,6BAAO,OAAO,CAAC,uBAAf,aADH,cAEG,6BACG,EAAE,CAAC,uBADN,CAEG,SAAS,CAAEX,UAAU,CAAC,CACnB,eAAgB,IADG,CAEnB,aAAc,KAAKU,KAAL,CAAWG,oBAFN,CAAD,CAFxB,CAMG,IAAI,CAAC,UANR,CAOG,IAAI,CAAC,YAPR,CAQG,QAAQ,CAAE,mBAAM,CACb,MAAI,CAACmC,yBAAL,GACF,CAVJ,EAFH,CAcI,KAAKtC,KAAL,CAAWG,oBAAX,eACE,2BACG,OAAO,CAAC,uBADX,CAEG,EAAE,CAAC,6BAFN,CAGG,SAAS,CAAC,aAHb,gCAfN,CA3BH,CALH,cAyDG,8BACG,EAAE,CAAC,gBADN,CAEG,SAAS,CAAC,kCAFb,CAGG,OAAO,CAAE,kBAAM,CACZ,MAAI,CAACmC,yBAAL,GACA,MAAI,CAACC,aAAL,GACF,CANJ,WAzDH,CADH,CADH,CADH,CA0EF,C,mBAzJgBlD,KAAK,CAACmD,S,EA4J1B,QAASC,CAAAA,eAAT,CAAyBzC,KAAzB,CAAgC,CAC7B,MAAO,CACJ0C,YAAY,CAAE1C,KAAK,CAAC0C,YADhB,CAEJC,KAAK,CAAE3C,KAAK,CAAC2C,KAFT,CAGJjC,WAAW,CAAEV,KAAK,CAACU,WAHf,CAAP,CAKF,CAED,cAAeZ,CAAAA,UAAU,CAACF,OAAO,CAAC6C,eAAD,CAAP,CAAyB1C,KAAzB,CAAD,CAAzB","sourcesContent":["import React from \"react\";\nimport classnames from \"classnames\";\nimport hash from \"object-hash\";\nimport { v4 as getUuid } from \"uuid\";\nimport { EMAIL_REGEX } from \"../../utils/helpers\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport actions from \"../../store/actions\";\nimport { withRouter } from \"react-router-dom\";\n\nclass Login extends React.Component {\n   constructor() {\n      super();\n      this.state = {\n         emailErrorMessage: \"\",\n         emailIsntValid: \"\",\n         PasswordFieldIsBlank: false,\n      };\n   }\n\n   logInCurrentUser() {\n      axios\n         .get(\n            \"https://raw.githubusercontent.com/Alangsam/white-bear-mpa/master/src/mock-data/user.json\"\n         )\n         .then((res) => {\n            // handle success\n            console.log(res.data);\n            const currentUser = res.data;\n            this.props.dispatch({\n               type: actions.UPDATE_CURRENT_USER,\n               payload: currentUser,\n            });\n         })\n         .catch((error) => {\n            // handle error\n            console.log(error);\n         });\n   }\n\n   checkIfCredentialsEntered() {\n      const inputedEmail = document.getElementById(\"Email_textbox_bottom\")\n         .value;\n      const inputedPassword = document.getElementById(\"Email_password_bottom\")\n         .value;\n      if (inputedEmail === \"\") {\n         this.setState({\n            emailIsntValid: true,\n            emailErrorMessage: \"Please enter your email\",\n         });\n      } else if (\n         EMAIL_REGEX.test(String(inputedEmail).toLowerCase()) === false\n      ) {\n         this.setState({\n            emailIsntValid: true,\n            emailErrorMessage: \"Please enter a valid email\",\n         });\n      } else {\n         this.setState({ emailIsntValid: false, emailErrorMessage: \"\" });\n      }\n      if (inputedPassword === \"\") {\n         this.setState({ PasswordFieldIsBlank: true });\n      } else {\n         this.setState({ PasswordFieldIsBlank: false });\n      }\n   }\n\n   logUserObject() {\n      const inputedEmail = document.getElementById(\"Email_textbox_bottom\")\n         .value;\n      const inputedPassword = document.getElementById(\"Email_password_bottom\")\n         .value;\n      if (\n         this.state.emailIsntValid === false &&\n         this.state.PasswordFieldIsBlank === false\n      ) {\n         const user = {\n            id: getUuid(),\n            email: inputedEmail,\n            password: hash(inputedPassword),\n            createdAt: Date.now(),\n         };\n         console.log(user);\n         this.logInCurrentUser();\n         this.props.history.push(\"/create-answer\");\n      }\n   }\n\n   render() {\n      return (\n         <div className=\"col-lg-4 ml-lg-8 mr-auto pl-1 mb-9\">\n            <div className=\"card mt-9  mx-auto\" style={{ width: \"350px\" }}>\n               <div className=\"card-body\">\n                  <h2 className=\"card-title\">Welcome back</h2>\n                  <p className=\"card-text\">\n                     Log in with your email address and password.\n                  </p>\n                  <form>\n                     <div className=\"form-group\">\n                        <label htmlFor=\"Email_textbox_bottom\">\n                           Email address\n                        </label>\n                        <input\n                           id=\"Email_textbox_bottom\"\n                           className={classnames({\n                              \"form-control\": true,\n                              \"is-invalid\": this.state.emailIsntValid,\n                           })}\n                           type=\"email\"\n                           name=\"login_info\"\n                           onChange={() => {\n                              this.checkIfCredentialsEntered();\n                           }}\n                        ></input>\n                        {this.state.emailIsntValid && (\n                           <div\n                              htmlFor=\"Email_textbox_bottom\"\n                              id=\"you-need-to-enter-email\"\n                              className=\"text-danger\"\n                           >\n                              {this.state.emailErrorMessage}\n                           </div>\n                        )}\n                     </div>\n                     <div className=\"form-group\">\n                        <label htmlFor=\"Email_password_bottom\">Password</label>\n                        <input\n                           id=\"Email_password_bottom\"\n                           className={classnames({\n                              \"form-control\": true,\n                              \"is-invalid\": this.state.PasswordFieldIsBlank,\n                           })}\n                           type=\"password\"\n                           name=\"login_info\"\n                           onChange={() => {\n                              this.checkIfCredentialsEntered();\n                           }}\n                        ></input>\n                        {this.state.PasswordFieldIsBlank && (\n                           <div\n                              htmlFor=\"Email_password_bottom\"\n                              id=\"you-need-to-enter-something\"\n                              className=\"text-danger\"\n                           >\n                              Please enter your password.\n                           </div>\n                        )}\n                     </div>\n                  </form>\n                  <button\n                     to=\"/create-answer\"\n                     className=\"btn btn-success float-right mt-4\"\n                     onClick={() => {\n                        this.checkIfCredentialsEntered();\n                        this.logUserObject();\n                     }}\n                  >\n                     Log in\n                  </button>\n               </div>\n            </div>\n         </div>\n      );\n   }\n}\n\nfunction mapStateToProps(state) {\n   return {\n      editableCard: state.editableCard,\n      queue: state.queue,\n      currentUser: state.currentUser,\n   };\n}\n\nexport default withRouter(connect(mapStateToProps)(Login));\n"]},"metadata":{},"sourceType":"module"}